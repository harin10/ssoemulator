<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">



	<sec:http use-expressions="true">
		<sec:intercept-url pattern="/authenticated" access="isAuthenticated()" />
		<sec:form-login login-processing-url="/login_security_check"
			always-use-default-target="false" authentication-failure-url="/spring_security_login?login_error" />

		<sec:custom-filter ref="authenticationProviderSelectionFilter"
			before="FORM_LOGIN_FILTER" />
			<sec:custom-filter ref="headerPopupatorWrapper" after="ANONYMOUS_FILTER" />
			<sec:custom-filter ref="ssoAuthenticationFilter" before="EXCEPTION_TRANSLATION_FILTER"/>
			<sec:logout  logout-success-url="/"/>

		<sec:session-management>
			<sec:concurrency-control max-sessions="1"
				error-if-maximum-exceeded="false" />
		</sec:session-management>
	</sec:http>

	<sec:authentication-manager alias="custAuthenticationManager">
	   <sec:authentication-provider ref="ssoAuthenticationProvider"/>
		<sec:authentication-provider>

			<sec:user-service>
				<sec:user name="romi" password="password"	authorities="ROLE_ADMIN" />
				<sec:user name="mahesh" password="password" authorities="ROLE_USER" />
			</sec:user-service>
		</sec:authentication-provider>
    </sec:authentication-manager>
    
    <beans:bean id="headerPopupatorWrapper" class="com.romi.sample.security.filter.HttpHeaderPopulatorStrategyWrapperFilter">
		<beans:property name="customHeaderPopulator">
			<beans:bean id="webSealHeaderPopulator" class="com.romi.sample.security.HTTPHeaderPopulator"/>			
		</beans:property>
	</beans:bean>

	<beans:bean id="authenticationProviderSelectionFilter"
		class="com.romi.sample.security.filter.AuthenticationProviderSelecionFilter">
		<beans:property name="authenticationManager" ref="custAuthenticationManager"></beans:property>
	</beans:bean>
	
	<beans:bean id="ssoAuthenticationFilter"
		class="com.romi.sample.security.filter.SSOAuthenticationFilter">
		<beans:property name="authenticationManager" ref="custAuthenticationManager"></beans:property>
	</beans:bean>
	
	
	<beans:bean id="ssoUserDetailsService"
		class="com.romi.sample.security.SSOUserDetailsService"/>




	<beans:bean id="ssoAuthenticationProvider"
		class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
		<beans:property name="preAuthenticatedUserDetailsService"
			ref="ssoUserDetailsService">
		</beans:property>
	</beans:bean>

</beans:beans>
